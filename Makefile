# Do not edit this file unless you know what you are doing.

include Makefile.configure # Read in configuration

# The targets provided by this make file are the following:

.PHONY: install # Installs all the packages.
.PHONY: clean   # removes all the packages and cleans up the dirs.
.PHONY: tests   # Runs the tests. Assumes that install is already done.
.PHONY: echo-variables        # Shows make variables. mainly for debugging
.PHONY: travis-before-install # Sets up the travis environment.
.PHONY: hlint   # runs hlint on the sources
.PHONY: local-repo local-repo-clean # Local repo rules.
.PHONY: src-tarball # Creates the source tarballs in the respective directories.

#
# For each package we have a target with the same name and a target
# with the suffix clean. The former builds the package and the latter
# cleans it up. The Makefile.configure should set the variable
# PACKAGES variable and add rules to capture dependencies between the
# package targets (see the comments in Makefile.configure). The
# cleaning targets are auto generated from them.
#


PACKAGE_CLEAN=$(addsuffix -clean, ${PACKAGES})

.PHONY: ${PACKAGES} # There is a target for each packages. You set this
                    # variable in the Makefile.configure.
.PHONY: ${PACKAGE_CLEAN}


# External variables that govern the building process.


TEST_PATH=dist/build/tests/tests # path to the tests in any package.

export PACKAGES

#
# Sets up the cabal config. The directory platform contains the cabal
# config file to use for each platform. Typically you need to put the
# package constraints there. The platform/default.cabal.conf contains
# the default config to use.
#

HASKELL_PLATFORM ?= default
CABAL_CONFIG=platform/${HASKELL_PLATFORM}.cabal.config

#
# In a travis build, you can set explicit versions for ghc and cabal
# by setting the variables GHC_VERSION and CABAL_VERSION. The place
# that you would want this to be done is in the env section of your
# .travis.yml.
#

ifdef GHC_VERSION	# For explicit ghc version

GHC_PKG=ghc-${GHC_VERSION}
PATH:=/opt/ghc/${GHC_VERSION}/bin:${PATH}

else

GHC_PKG=ghc

endif			# For explicit ghc version


ifdef CABAL_VERSION

CABAL_PKG=cabal-install-${CABAL_VERSION}
CABAL=cabal-${CABAL_VERSION}

else

CABAL_PKG=cabal-install
CABAL=cabal

endif

# Building the local repo

local-repo: src-tarball
	./scripts/raaz-repo ${PACKAGES}
	make -C local-repo index

local-repo-clean:
	make -C local-repo clean

# This target just prints the setting of each relevant
# variable. Useful for debugging.

echo-variables:
	@echo Makefile variables.
	@echo -e '\t'CABAL_VERSION=${CABAL_VERSION}
	@echo -e '\t'CABAL_CONFIG=${CABAL_CONFIG}
	@echo -e '\t'GHC_VERSION=${GHC_VERSION}
	@echo -e '\t'HASKELL_PLATFORM=${HASKELL_PLATFORM}

	@echo -e '\t'ghc,cabal: ${GHC_PKG} ${CABAL_PKG}

install: ${PACKAGES}
	@echo User packages installed
	ghc-pkg list --user

${PACKAGES}:
	cp ${CABAL_CONFIG} $@/cabal.config
	cd $@;\
	${CABAL} configure --enable-tests --enable-benchmarks -v2;\
	${CABAL} build;\
	${CABAL} test;\
	${CABAL} check;\
	${CABAL} haddock;\
	${CABAL} install

tests:
	$(foreach pkg, ${PACKAGES},\
		cd ${pkg};\
		${CABAL} test;\
		cd ..;\
		)

src-tarball:
	$(foreach pkg, ${PACKAGES},\
		  cd ${pkg};\
		  ${CABAL} sdist;\
		  cd ..;\
		)


clean:   ${PACKAGE_CLEAN} local-repo-clean

${PACKAGE_CLEAN}:
	cd $(patsubst %-clean,%,$@);\
	./Setup.lhs clean;\
	cd ..
	-ghc-pkg unregister  $(patsubst %-clean,%,$@) --force

#
#  Travis platform setup
#

travis-before-install:
	sudo add-apt-repository -y ppa:hvr/ghc
	sudo apt-get update
	sudo apt-get install ${CABAL_PKG} ${GHC_PKG} happy
	${CABAL} update

#
#  Stuff that checks the coding style
#

hlint:
	hlint ${PACKAGES}
